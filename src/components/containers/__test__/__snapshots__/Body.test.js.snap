// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BodyTest render without crahsing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Body />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="col-xs-1"
        />,
        <aside
          className="col-xs-10"
        >
          <section
            className="content"
          >
            <div
              className="row"
            >
              <section
                className="col-lg-12 connectedSortable"
              />
            </div>
          </section>
        </aside>,
        <div
          className="col-xs-1"
        />,
      ],
      "className": "wrapper row-offcanvas row-offcanvas-left",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "col-xs-1",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <section
            className="content"
          >
            <div
              className="row"
            >
              <section
                className="col-lg-12 connectedSortable"
              />
            </div>
          </section>,
          "className": "col-xs-10",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row"
            >
              <section
                className="col-lg-12 connectedSortable"
              />
            </div>,
            "className": "content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <section
                className="col-lg-12 connectedSortable"
              />,
              "className": "row",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "col-lg-12 connectedSortable",
              },
              "ref": null,
              "rendered": null,
              "type": "section",
            },
            "type": "div",
          },
          "type": "section",
        },
        "type": "aside",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "col-xs-1",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="col-xs-1"
          />,
          <aside
            className="col-xs-10"
          >
            <section
              className="content"
            >
              <div
                className="row"
              >
                <section
                  className="col-lg-12 connectedSortable"
                />
              </div>
            </section>
          </aside>,
          <div
            className="col-xs-1"
          />,
        ],
        "className": "wrapper row-offcanvas row-offcanvas-left",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "col-xs-1",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <section
              className="content"
            >
              <div
                className="row"
              >
                <section
                  className="col-lg-12 connectedSortable"
                />
              </div>
            </section>,
            "className": "col-xs-10",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row"
              >
                <section
                  className="col-lg-12 connectedSortable"
                />
              </div>,
              "className": "content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <section
                  className="col-lg-12 connectedSortable"
                />,
                "className": "row",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "col-lg-12 connectedSortable",
                },
                "ref": null,
                "rendered": null,
                "type": "section",
              },
              "type": "div",
            },
            "type": "section",
          },
          "type": "aside",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "col-xs-1",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
